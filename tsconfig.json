{
  "compilerOptions": {
    // Incremental builds
    // NOTE: Enabling incremental builds speeds up `tsc`. Keep in mind though that it does not reliably bust the cache when the `tsconfig.json` file changes.
    "incremental": true,

    // Type checking
    "strict": false,
    "useDefineForClassFields": true, // Not enabled by default in `strict` mode unless we bump `target` to ES2022.
    "noFallthroughCasesInSwitch": true, // Not enabled by default in `strict` mode.
    "noImplicitReturns": true, // Not enabled by default in `strict` mode.
    "useUnknownInCatchVariables": true, // TODO: This would normally be enabled in `strict` mode but would require some adjustments to the codebase.
    "noImplicitOverride": true, // Not enabled by default in `strict` mode.
    "noUnusedLocals": true, // Not enabled by default in `strict` mode.
    "noUnusedParameters": true, // Not enabled by default in `strict` mode.
    // TODO: The following options are also not enabled by default in `strict` mode and would be nice to have but would require some adjustments to the codebase.
    // "exactOptionalPropertyTypes": true,
    // "noUncheckedIndexedAccess": true,

    // JavaScript support
    "allowJs": false,
    "checkJs": false,

    // Interop constraints
    "esModuleInterop": true,
    "allowSyntheticDefaultImports": true,
    "forceConsistentCasingInFileNames": true,
    "verbatimModuleSyntax": false,
    "importHelpers": true, // This is only used for build validation. Since we do not have `tslib` installed, this will fail if we accidentally make use of anything that'd require injection of helpers.

    // Language and environment
    "module": "NodeNext",
    "moduleResolution": "NodeNext",
    "target": "ESNext",
    "lib": ["ESNext", "DOM"],

    // Skip type checking for node modules
    "skipLibCheck": true,

    "rootDir": ".",
    "outDir": "dist",
    "declaration": true,
    "declarationDir": "dist/types",
    "declarationMap": true,
    "typeRoots": [
      "./node_modules/@types"
    ]
  },
  // This tsconfig file contains the shared config for the build (tsconfig.build.json) and type checking (tsconfig.json) config.
  "include": ["src", "index.ts"],
  "exclude": ["node_modules", "dist", "build"]
}